services:
  backend:
    container_name: node-scrapping
    build: .
    ports:
      - "5500:5500"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    container_name: database
    image: mongo:latest
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    command: --port 27047
    ports:
      - "27047:27047"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:latest
    restart: always
    ports:
      - "3001:3001"
    environment:
      - TZ=Europe/Madrid
    volumes:
      - ./uptime_kuma_data:/app/data
    networks:
      - app-network
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  uptime_kuma_data:
